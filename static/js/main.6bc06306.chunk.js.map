{"version":3,"sources":["assets/images/Marvel-Logo.png","components/Modal/index.tsx","middlewares/axios.ts","utils/emailjs.tsx","pages/ListComics.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","handleClose","show","children","modalRef","showHideClassName","className","ref","type","onClick","process","REACT_APP_TIMESTAMP","REACT_APP_PUBLIC_KEY","REACT_APP_MD5","api","axios","create","baseURL","params","ts","apikey","hash","emailHelper","receiverEmail","message","a","emailjs","send","toemail","result","status","ListComics","useState","comics","setComics","comicsFiltereds","setComicsFiltereds","comicsToSend","setComicsToSend","offset","setOffset","filter","setFilter","comicIndex","setComicIndex","email","setEmail","showModal","setShowModal","ImageNotFound","getComicsByFilter","useCallback","comicsUrl","get","titleStartsWith","getInitialComics","getComics","data","results","useRef","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideClick","delayFilter","setTimeout","clearTimeout","c","comicsFiltered","comic","title","toLowerCase","includes","alt","src","marvelLogo","placeholder","value","onChange","disabled","JSON","stringify","length","map","index","thumbnail","path","extension","renderModal","id","prevState","description","newComicsArray","push","console","log","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6bc06306.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Marvel-Logo.8518dc47.png\";","import React, { FC } from \"react\";\nimport \"./modal.css\";\n\ninterface IModal {\n  handleClose?: any;\n  show?: boolean;\n  children?: any;\n  modalRef: any;\n}\n\nconst Modal: FC<IModal> = ({ handleClose, show, children, modalRef }) => {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n\n  return (\n    <div className={showHideClassName}>\n      <section ref={modalRef} className=\"modal-main\">\n        {children}\n        <button className=\"close-button\" type=\"button\" onClick={handleClose}>\n          X\n        </button>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nconst { REACT_APP_TIMESTAMP, REACT_APP_PUBLIC_KEY, REACT_APP_MD5  } = process.env;\n\nconst api = axios.create({\n  baseURL: 'https://gateway.marvel.com/v1/public',\n  params: {\n    ts: REACT_APP_TIMESTAMP,\n    apikey: REACT_APP_PUBLIC_KEY,\n    hash: REACT_APP_MD5,\n  }\n});\n\nexport default api;\n","import React from \"react\";\nimport emailjs from \"emailjs-com\";\n\n//interface IEmailBody {\n  //receiverEmail?: string;\n  //message?: string;\n//}\n\nconst emailHelper = async (receiverEmail: string, message: string) => {\n  const result = await emailjs.send(\n    `${process.env.REACT_APP_SERVICE_ID}`,\n    `${process.env.REACT_APP_TEMPLATE_ID}`,\n    {\n      toemail: `${receiverEmail}`,\n      message: `${message}`,\n    },\n    `${process.env.REACT_APP_USER_ID}`\n  );\n\n  return result.status === 200;\n};\n\nexport default emailHelper;\n","import React, { useEffect, useState, useCallback, FC, useRef } from \"react\";\nimport marvelLogo from \"../assets/images/Marvel-Logo.png\";\nimport Modal from \"../components/Modal\";\nimport api from \"../middlewares/axios\";\nimport emailjs from \"../utils/emailjs\";\n\ninterface IThumbnail {\n  extension: string;\n  path: string;\n}\n\ninterface IComic {\n  id?: number;\n  digitalId?: number;\n  description: string;\n  title: string;\n  thumbnail: IThumbnail;\n}\n\nconst useOutsideClick = (ref: any, callback: any) => {\n  const handleClick = (e: any) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n\nconst ListComics: FC = () => {\n  const [comics, setComics] = useState<IComic[]>([]);\n  const [comicsFiltereds, setComicsFiltereds] = useState<IComic[]>([]);\n  const [comicsToSend, setComicsToSend] = useState<IComic[]>([]);\n  const [offset, setOffset] = useState(0);\n  const [filter, setFilter] = useState(\"\");\n  const [comicIndex, setComicIndex] = useState(0);\n  const [email, setEmail] = useState(\"\");\n\n  const [showModal, setShowModal] = useState(false);\n  const ImageNotFound = \"Imagem nÃ£o encontrada!\";\n\n  const getComicsByFilter = useCallback(\n    async (comicsUrl: string) => {\n      return await api.get(comicsUrl, {\n        params: {\n          titleStartsWith: filter,\n        },\n      });\n    },\n    [filter]\n  );\n\n  const getInitialComics = useCallback(async (comicsUrl: string) => {\n    return await api.get(comicsUrl);\n  }, []);\n\n  const getComics = useCallback(async () => {\n    const comicsUrl = `/comics?offset=${offset}`;\n    try {\n      const { data } = !!filter\n        ? await getComicsByFilter(comicsUrl)\n        : await getInitialComics(comicsUrl);\n\n      setOffset(data.data.offset);\n      setComics(data.data.results);\n    } catch (error) {\n      setComics([]);\n    }\n  }, [offset, filter, getComicsByFilter, getInitialComics]);\n\n  const ref = useRef();\n\n  useOutsideClick(ref, () => {\n    if (showModal) {\n      setShowModal(false);\n    }\n  });\n\n  useEffect(() => {\n    const delayFilter = setTimeout(getComics, 500);\n    setOffset(0);\n\n    return () => {\n      clearTimeout(delayFilter);\n    };\n  }, [filter]);\n\n  const renderModal = (comicIndex: number) => {\n    setShowModal(true);\n    setComicIndex(comicIndex);\n  };\n\n  const listComics = (c: any) => {\n    return c.map((comic: IComic, index: number) => {\n      return (\n        <li key={comic.id} className=\"container-comic\">\n          <img\n            alt={ImageNotFound}\n            src={`${comic.thumbnail.path}/portrait_incredible.${comic.thumbnail.extension}`}\n          />\n          <div\n            onClick={() => {\n              renderModal(index);\n            }}\n            className=\"description\"\n          >\n            {comic.title}\n          </div>\n        </li>\n      );\n    });\n  };\n\n  useEffect(() => {\n    getComics();\n  }, [offset]);\n\n  useEffect(() => {\n    const comicsFiltered = comics.filter((comic: IComic) => {\n      return comic.title.toLowerCase().includes(filter.toLowerCase());\n    });\n    setComicsFiltereds(comicsFiltered);\n  }, [filter, comics]);\n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"div-logo\">\n          <img className=\"logo\" alt={ImageNotFound} src={marvelLogo} />\n        </div>\n        <div className=\"filter\">\n          <input\n            placeholder=\"Digite ao menos 3 caracteres!\"\n            value={filter}\n            onChange={(e) => {\n              setFilter(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"div-send-email-button\">\n          <input\n            placeholder=\"Digite o seu e-mail\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <button\n            disabled={!email}\n            onClick={() => {\n              emailjs(email, JSON.stringify(comicsToSend));\n            }}\n          >\n            Enviar e-mail\n          </button>\n        </div>\n      </div>\n      <div className=\"container-comics\">\n        <ul className=\"list-comics\">\n          {listComics(\n            filter.length || comicsFiltereds.length ? comicsFiltereds : comics\n          )}\n        </ul>\n      </div>\n      {comics.length > 0 && (\n        <div className=\"container-filter\">\n            <button\n                disabled={offset === 0}\n              className=\"hq-button\"\n              onClick={() => {\n                setOffset((prevState) => prevState - 20);\n              }}\n            >\n              prev\n            </button>\n          <div className=\"pagination\">\n          {<p>{!!offset ? offset / 20 + 1 : 1}</p>}\n          </div>\n          <button \n          className=\"hq-button\"\n          onClick={() => setOffset((prevState) => prevState + 20)}>\n            next\n          </button>\n        </div>\n      )}\n      <Modal\n        modalRef={ref}\n        show={showModal}\n        handleClose={() => setShowModal(false)}\n      >\n        <div className=\"modal-comics\"></div>\n        <div className=\"hq-info\">\n          {comics.length ? (\n            <img\n              alt={ImageNotFound}\n              src={`${comics[comicIndex].thumbnail.path}/portrait_incredible.${comics[comicIndex].thumbnail.extension}`}\n            />\n          ) : (\n            \"\"\n          )}\n          <div className=\"hq-info-text\">\n            <p>{comics.length ? comics[comicIndex].title : \"\"}</p>\n            <p>{comics.length ? comics[comicIndex].description : \"\"}</p>\n          <button\n            className=\"select-hq-button\"\n            onClick={() => {\n                const newComicsArray = comicsToSend;\n                newComicsArray.push({\n                    title: comics[comicIndex].title,\n                    description: comics[comicIndex].description,\n                    thumbnail: comics[comicIndex].thumbnail\n                })\n                setComicsToSend(newComicsArray);\n                console.log(comicsToSend);\n            }}\n            >\n            Selecionar\n          </button>\n            </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default ListComics;\n","import React, { FC } from 'react';\nimport ListComics from './ListComics';\n\nconst Home: FC = () => {\n    return (\n        <>\n            <ListComics />\n        </>\n    )\n};\n    \nexport default Home;\n    ","import React from 'react';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}