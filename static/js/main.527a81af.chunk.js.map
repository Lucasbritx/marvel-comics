{"version":3,"sources":["assets/images/Marvel-Logo.png","assets/images/heart.png","assets/images/heartSelected.png","components/Modal/index.tsx","middlewares/axios.ts","utils/emailjs.tsx","pages/ListComics.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","handleClose","show","children","modalRef","className","ref","type","onClick","process","REACT_APP_TIMESTAMP","REACT_APP_PUBLIC_KEY","REACT_APP_MD5","api","axios","create","baseURL","params","ts","apikey","hash","emailHelper","receiverEmail","message","a","emailjs","send","to","result","status","ListComics","useState","comics","setComics","comicsToSend","setComicsToSend","offset","setOffset","filter","setFilter","comicIndex","setComicIndex","email","setEmail","loading","setLoading","showModal","setShowModal","ImageNotFound","getComicsByFilter","useCallback","comicsUrl","get","titleStartsWith","getInitialComics","sendEmail","convertComicsJSONtoString","toast","success","error","getComics","data","results","useRef","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideClick","length","delayFilter","setTimeout","clearTimeout","renderModal","isComicSelected","comicId","some","comic","id","selectHqToSend","comicsSelecteds","find","push","description","thumbnail","title","removeHqToSend","map","c","path","extension","alt","src","marvelLogo","value","placeholder","onChange","disabled","test","color","css","size","role","index","tabIndex","onKeyPress","keyCode","handleKeypress","heartSelected","heart","prevState","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.527a81af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Marvel-Logo.8518dc47.png\";","export default __webpack_public_path__ + \"static/media/heart.c412cbae.png\";","export default __webpack_public_path__ + \"static/media/heartSelected.556c78a5.png\";","import React, { FC } from \"react\";\nimport \"./modal.css\";\n\ninterface IModal {\n  handleClose?: any;\n  show?: boolean;\n  children?: any;\n  modalRef: any;\n}\n\nconst Modal: FC<IModal> = ({ handleClose, show, children, modalRef }) => { \n  if(!show) {\n    return null;\n  }\n\n  return (\n    <div \n    className=\"modal display-block\">\n      <section ref={modalRef} className=\"modal-main\">\n        {children}\n        <button className=\"close-button\" type=\"button\" onClick={handleClose}>\n          X\n        </button>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nconst { REACT_APP_TIMESTAMP, REACT_APP_PUBLIC_KEY, REACT_APP_MD5  } = process.env;\n\nconst api = axios.create({\n  baseURL: 'https://gateway.marvel.com/v1/public',\n  params: {\n    ts: REACT_APP_TIMESTAMP,\n    apikey: REACT_APP_PUBLIC_KEY,\n    hash: REACT_APP_MD5,\n  }\n});\n\nexport default api;\n","import React from \"react\";\nimport emailjs from \"emailjs-com\";\n\nconst emailHelper = async (receiverEmail: string, message: string[]) => {\n  const result = await emailjs.send(\n    `${process.env.REACT_APP_SERVICE_ID}`,\n    `${process.env.REACT_APP_TEMPLATE_ID}`,\n    {\n      to: `${receiverEmail}`,\n      message: `${message}`,\n    },\n    `${process.env.REACT_APP_USER_ID}`\n  );\n\n  return result.status === 200;\n};\n\nexport default emailHelper;\n","import React, { useEffect, useState, useCallback, FC, useRef } from \"react\";\nimport DotLoader from \"react-spinners/ClipLoader\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport marvelLogo from \"../assets/images/Marvel-Logo.png\";\nimport heart from \"../assets/images/heart.png\";\nimport heartSelected from \"../assets/images/heartSelected.png\";\nimport Modal from \"../components/Modal\";\nimport api from \"../middlewares/axios\";\nimport emailjs from \"../utils/emailjs\";\n\ninterface IThumbnail {\n  extension: string;\n  path: string;\n}\n\ninterface IComic {\n  id?: number;\n  description: string;\n  title: string;\n  thumbnail: IThumbnail;\n}\n\nconst override = `\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst useOutsideClick = (ref: any, callback: any) => {\n  const handleClick = (e: any) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n\nconst ListComics: FC = () => {\n  const [comics, setComics] = useState<IComic[]>([]);\n  const [comicsToSend, setComicsToSend] = useState<IComic[]>([]);\n  const [offset, setOffset] = useState(0);\n  const [filter, setFilter] = useState(\"\");\n  const [comicIndex, setComicIndex] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const ImageNotFound = \"Imagem não encontrada!\";\n  const ENTER_KEY_1 = 0;\n  const ENTER_KEY_2 = 13;\n\n  const getComicsByFilter = useCallback(\n    async (comicsUrl: string) => {\n      return await api.get(comicsUrl, {\n        params: {\n          titleStartsWith: filter,\n        },\n      });\n    },\n    [filter]\n  );\n\n  const getInitialComics = useCallback(async (comicsUrl: string) => {\n    return await api.get(comicsUrl);\n  }, []);\n\n  const sendEmail = async () => {\n    try {\n      setLoading(true);\n      await emailjs(email, convertComicsJSONtoString());\n      toast.success(\"E-mail enviado\");\n      setComicsToSend([])\n      setEmail(\"\");\n      setLoading(false);\n    } catch (error) {\n      toast.error(\"Erro ao enviar o e-mail\");\n    }\n  };\n\n  const getComics = useCallback(async () => {\n    const comicsUrl = `/comics?offset=${offset}`;\n    try {\n      setLoading(true);\n      const { data } = !!filter\n        ? await getComicsByFilter(comicsUrl)\n        : await getInitialComics(comicsUrl);\n\n      setComics(data.data.results);\n      setLoading(false);\n    } catch (error) {\n      setComics([]);\n    }\n  }, [offset, filter, getComicsByFilter, getInitialComics]);\n\n  const ref = useRef();\n\n  useOutsideClick(ref, () => {\n    if (showModal) {\n      setShowModal(false);\n    }\n  });\n\n  useEffect(() => {\n    if(filter.length === 0 || filter.length >= 3) {\n      const delayFilter = setTimeout(() => {          \n          if(offset >= 1){\n            setOffset(0);\n          } else {\n            getComics();\n          }\n      }, 500);\n\n      return () => {\n        clearTimeout(delayFilter);\n      };\n    };\n  }, [filter]);\n\n  useEffect(() => { \n    getComics();\n  }, [offset]);\n\n  const renderModal = (comicIndex: number) => {\n    setShowModal(true);\n    setComicIndex(comicIndex);\n  };\n\n  const handleKeypress = (e: any, index: number) => {\n  if (e.keyCode === ENTER_KEY_1 || ENTER_KEY_2) {\n   return renderModal(index);\n  }\n  return null;\n};\n\n  const listComics = () => {\n    return comics.map((comic: IComic, index: number) => {\n      return (\n        <li\n          key={comic.id}\n          className={`container-comic ${\n            isComicSelected(comic.id) ? \"hq-selected\" : \"\"\n          }`}\n        >\n          <img\n            className=\"comic-image\"\n            alt={ImageNotFound}\n            src={`${comic.thumbnail.path}/portrait_incredible.${comic.thumbnail.extension}`}\n          />\n          <div\n            role=\"button\"\n            tabIndex={0}\n            onKeyPress={(e)=> handleKeypress(e, index)}\n            onClick={() => {\n              renderModal(index);\n            }}\n            className=\"description\"\n          >\n            {comic.title}\n          </div>\n\n          <div className={`select ${\n            loading ? \"display-none\" : \"\"\n          }`}>\n            <img\n              className={`heart`}\n              alt={ImageNotFound}\n              onClick={() => {\n                if (isComicSelected(comic.id)) {\n                  removeHqToSend(comic.id);\n                } else {\n                  selectHqToSend(comic.id);\n                }\n              }}\n              src={isComicSelected(comic.id) ? heartSelected : heart}\n            />\n          </div>\n        </li>\n      );\n    });\n  };\n\n  const isComicSelected = (comicId: any) => { \n      if (comicsToSend.length > 0) {\n        return comicsToSend.some((comic) => comic.id === comicId);\n      } else {\n        return false;\n      }\n    }\n\n\n  const selectHqToSend = (comicId: any) => {\n    const comicsSelecteds = comicsToSend;\n    const comic = comics?.find((comic) => comic.id === comicId);\n    if (comic) {\n      comicsSelecteds.push({\n        id: comic.id,\n        description: comic.description,\n        thumbnail: comic.thumbnail,\n        title: comic.title,\n      });\n    }\n    setComicsToSend([...comicsSelecteds]);\n  };\n\n  const removeHqToSend = (comicId: any) => {\n    const comicsSelecteds = comicsToSend.filter(\n      (comic) => comic.id !== comicId\n    );\n    setComicsToSend(comicsSelecteds);\n  };\n\n  const convertComicsJSONtoString = () => {\n    return comicsToSend.map((c: IComic)=> {\n      return `\n        <p>\n          Title: ${c.title}\n        </p>\n        <img \n          src=\"${c.thumbnail.path}.${c.thumbnail.extension}\" \n          alt=\"${c.title}\"\n          style=\"width: 12rem;\"\n        />\n        ${c.description ? `<p>\n        Description:\n        ${c.description}\n        </p>` : ''}\n      `\n    })\n  };\n\n  const validateEmail = ():boolean =>  \n    {\n        var re = /\\S+@\\S+\\.\\S+/;\n        return re.test(email);\n    }\n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"div-logo\">\n          <img className=\"logo\" alt={ImageNotFound} src={marvelLogo} />\n        </div>\n\n        <div className=\"div-send-email-button\">\n          <input\n            value={email}\n            placeholder=\"Digite o seu e-mail\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <button disabled={!email || loading || !validateEmail() || !comicsToSend.length } onClick={sendEmail}>\n            Enviar e-mail\n          </button>\n        </div>\n      </div>\n      <div className=\"filter\">\n        <input\n          placeholder=\"Digite ao menos 3 caracteres!\"\n          value={filter}\n          onChange={(e) => {\n            setFilter(e.target.value);\n          }}\n        />\n      </div>\n      {loading && (\n        <div className=\"spinner\">\n          <DotLoader color=\"red\" loading={loading} css={override} size={150} />\n        </div>\n      )}\n      {!loading && (\n        <div className=\"container-comics\">\n          <ul role=\"tablist\" className=\"list-comics\">{listComics()}</ul>\n        </div>\n      )}\n      {comics.length > 0 && (\n        <div className=\"container-pagination\">\n          <button\n            disabled={offset === 0 || loading}\n            className=\"hq-button\"\n            onClick={() => {\n              setOffset((prevState) => prevState - 20);\n            }}\n          >\n            &lt;\n          </button>\n          <div className=\"pagination\">\n            {<p>{!!offset ? offset / 20 + 1 : 1}</p>}\n          </div>\n          <button\n            disabled={loading}\n            className={`${loading} ? '' : hq-button`}\n            onClick={() => {\n              setOffset((prevState) => prevState + 20);\n            }}\n          >\n            &gt;\n          </button>\n        </div>\n      )}\n      <Modal\n        modalRef={ref}\n        show={showModal}\n        handleClose={() => setShowModal(false)}\n      >\n        <div className=\"modal-comics\"></div>\n        <div className=\"hq-info\">\n          {comics.length ? (\n            <img\n              alt={ImageNotFound}\n              src={`${comics[comicIndex].thumbnail.path}/portrait_incredible.${comics[comicIndex].thumbnail.extension}`}\n            />\n          ) : (\n            \"\"\n          )}\n          <div className=\"hq-info-text\">\n            <p>{comics.length ? comics[comicIndex].title : \"\"}</p>\n            <p>{comics.length ? comics[comicIndex].description : \"\"}</p>\n            <button\n              className=\"select-hq-button\"\n              onClick={() => {\n                if (isComicSelected(comics[comicIndex]?.id)) {\n                  removeHqToSend(comics[comicIndex]?.id);\n                  setShowModal(false);\n                } else {\n                  selectHqToSend(comics[comicIndex]?.id);\n                  setShowModal(false);\n                }\n              }}\n            >\n              {isComicSelected(comics[comicIndex]?.id)\n                ? \"Remover da lista\"\n                : \"Selecionar\"}\n            </button>\n          </div>\n        </div>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default ListComics;\n","import React, { FC } from 'react';\nimport ListComics from './ListComics';\n\nconst Home: FC = () => {\n    return (\n        <>\n            <ListComics />\n        </>\n    )\n};\n    \nexport default Home;\n    ","import React from 'react';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}